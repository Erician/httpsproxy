# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = unittest/googletest/googletest

# Where to find user code.
USER_TEST_DIR = unittest/utils/print
USER_DIR = utils/print

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

#USER_DIR headers
CPPFLAGS += -I .

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wno-unused -Wno-sign-compare -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = $(OBJDIR)/utils_dc_print_unittest

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

$(OBJDIR)/dc_print.o : $(USER_DIR)/dc_print.cpp $(USER_DIR)/dc_print.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/dc_print.cpp -o $@

$(OBJDIR)/dc_print_unittest.o : $(USER_TEST_DIR)/dc_print_unittest.cpp $(USER_DIR)/dc_print.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_TEST_DIR)/dc_print_unittest.cpp -o $@

$(OBJDIR)/utils_dc_print_unittest : $(OBJDIR)/dc_print.o $(OBJDIR)/dc_print_unittest.o $(OBJDIR)/gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@
